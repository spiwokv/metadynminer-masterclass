/**
\page masterclass-22-02 PLUMED Masterclass 22-02: Analysis of Plumed output by Metadynminer
\authors Vojtech Spiwok
\date February 14, 2022

\section masterclass-22-02-aims Aims

The aim of this Masterclass is to introduce users to the R package Metadynminer for analysis
of results from metadynamics in Plumed.

\section masterclass-22-02-lo Objectives

Once this Masterclass is completed, users will be able to:

- Install R and its packages.
- Load metadynamics results (`HILLS` file) to Metadynminer.
- Calcule free energy surface and plot it in a publication quality.
- Make an animation of evolution of a free energy surface.
- Locate free energy minima and evaluate their relative free energies.
- Use data in Metadynminer objects to do advanced calculations (e.g. reweighting).
 
\section masterclass-22-02-install Setting up the software 

\subsection masterclass-22-02-rinstall Installation

We will use [R](https://www.r-project.org/) installed from [CRAN](https://cloud.r-project.org/).
Go to [CRAN](https://cloud.r-project.org/) and follow the installation instructions for your
operating system. R is Open Source. It is not necessary to use graphical user interface but it
is very useful, especially for making illustrations.

If you plan to use a graphical user interface, the best option is [Rstudio](https://www.rstudio.com/).
[Desktop version of Rstudio](https://www.rstudio.com/products/rstudio/) is Open Source. Follow
the installation instructions for yor operating system.

To install metadynminer, open R (in commandline type `R` or open GUI by typing `rstudio` or using
an icon) and type:

\verbatim
install.packages("metadynminer")
\endverbatim

The output should contain: `* DONE (metadynminer)`. If you have an output: `installation of package
metadynminer had non-zero exit status` there was a problem with installation. You may try:

- On MS Windows install `Rtools`.
- If you have permission issues, you can try commands `Sys.getenv("R_HOME")` and
`Sys.getenv("R_LIBS_USER")` and check the permission of the printed directories. You may change
installation directories by corresponding `Sys.setenv(...)` commands.

You may check whether Metadynminer was installed correctly by typing:

\verbatim
library(metadynminer)
\endverbatim

This command shold have no output. Installation is done only once (or can be repreated for
version upgrades). Loading of the package by `library` command must be done in every R seance.

\section masterclass-22-02-resources Resources

The data needed for this Masterclass can be found on [GitHub](https://github.com/plumed/masterclass-22-02).
You can clone this repository using the following command:

\verbatim
git clone https://github.com/plumed/masterclass-22-02.git
\endverbatim

The repository contains hills and colvar files, respectively, from 10 ns metadynamics simulation of
alanine dipeptide in water calculated in Plumed. Other input data are availeble from
[Zenodo](XXXX) but are not required in this tutorial. The repo contains:
- `HILLS.cv12` and `COLVAR.cv12` - hills and collective variable + bias report from metadynamics with phi a psi dihedral angles
- `HILLS.cv1` and `COLVAR.cv1` - hills and collective variable + bias report from metadynamics with phi dihedral angle
- `HILLS.cv2` and `COLVAR.cv2` - hills and collective variable + bias report from metadynamics with psi dihedral angle

This data are independent on Plumed version (for version >=2.0).

\section masterclass-22-02-usingr Using R

R is a program and a scrpting language predominantly developed for statistical data analysis. It is popular in
statistics, economy, ecology, bioinformatics and other fileds. Let us quickly introduce R. Open R as described
above and type:

\verbatim
1+1
2-1
3*3
5/2
\endverbatim

This shows addition, subtraction, multiplication and division. Numbers and other objects can be saved
to variables. We advice users to avoid names of variables that can be confused with existing functions
in R. In this masterclass we will use prefix "my" (e.g. `myhills`) to avoid this. Variable names are
case-sensitive. The operator used to save something to is an arrow `<-` (less than followed by minus sign).
You may see R codes with a normal equal sign but we will be puristic in this. Let us show variables in R:
\verbatim
x <- 1+1
x
\endverbatim

In the outputs above there is an unexpected string `[1]`. This is the index of the first item on the line.
This is usefull when dealing with vectors. Vector can be created by implicitely typing its elements to the
function `c()`, by `:` operator and other ways:
\verbatim
x <- c(1, 3, 2)
x
x <- 1:50
x
x <- 50:1
x
\endverbatim

R can also work with 2D and multidimensional matrices. R can work with strings (written in quotes, e.g.
"blue"), Booleans (`TRUE` and `FALSE`, or shortened as `T` and `F`).

R uses functions written as the name of funtion followed by its arguments in brackets:
\verbatim
exp(1)
cos(pi)
\endverbatim

Functions can be applied element-wise:
\verbatim
x<-0:10
cos(x)
\endverbatim

Functions with more variables use specification set by `=`, separated by `,`:
\verbatim
x<-0:100/10
y<-cos(x)
plot(x, y)
plot(x, y, xlab="x axis", ylab="y axis", ylim=c(-2,2))
\endverbatim

Important difference from many other programming environments is that R can freely change number types,
e.g. `3/2` is evaluated as 1.5, unlike Pyhton, which gives 1, because 3 and 2 are integers, not floats.

Another important difference is that R uses indexes of vector items starting with 1 (not 0 line in C/C++,
Python etc.). For example:
\verbatim
x <- c("Carlo", "Gareth", "Giovanni", "Max")
x[2]
\endverbatim
will return Gareth. In contrast, Python returns Giovanni:
\verbatim
x = ["Carlo", "Gareth", "Giovanni", "Max"]
x[2]
\endverbatim

Finally, R can use other types of objects, including objects defined by a user. Their instances can
be accessed by a string operator. For example, the function `prcomp` performs a principal component
analysis. Its output is an object with multiple instances, for example with a rotation matrix:
\verbatim
pcamodel <- prcomp(outer(1:3,1:2))
pcamodel
pcamodel$rotation
\endverbatim

Finally, to quit R you can use the function `q()`. The program ask the user whether he/she wants to
save the data (i.e. variables created in the previous course of the run). We advise users to NOT save
data, i.e. chose the option "n" or function `q(save="n")`. 

\subsection masterclass-22-02-ex-1 Exercise 1: Calculation of the free energy surface from metadynamics hills

\subsection masterclass-22-02-ex-2 Exercise 2: Making a movie

\subsection masterclass-22-02-ex-3 Exercise 3: Making a movie of flooding

\subsection masterclass-22-02-ex-4 Exercise 4: Reweighting

*/

link: @subpage masterclass-22-02 

description: This Masterclass explains the use of R package Metadynminer to analyze metadynamics results.
